; This is the file you will use for Lab 12 assignment
; Make sure to comment your code properly and don't exceed 
; the line limitation for this assignment.  Good luck!

0011 0001 0000 0000 ; x3100 - starting address of the program

;Eric Johnson
;erjohns3
;April 14, 2014
;Lab 12

;This program finds the max value of a list and puts it in R4

;I will make this program by setting a register to the first number in the array and comparing it against
;the next number after it.  If the next number is higher, the register will be set to next number, if not,
;the register will keep the original number.  I will loop through this 10 times until all the numbers have
;been compared.

;R1 - stores the value of the next number in the array
;R2 - stores the difference in the highest number so far and the next number
;R3 - pointer to memory locations of numbers
;R4 - counter to have part of program loop 10 times
;R5 - used to store largest number so far

1110 011 000110001    ; LEA R3,x031    (stores x3132 in R3)
0101 100 100 1 00000  ; AND R4,R4,#0   (sets R4 to 0)
0001 100 100 1 01010  ; ADD R4,R4,#10  (adds 10 to R4)
0110 101 011 000000   ; LDR R5,R3,#0   (Loads data from memory in address R3 into R5)
0001 011 011 1 00001  ; ADD R3,R3,#1   (increase R3 by 1)
0110 001 011 000000   ; LDR R1,R3,#0   (loads data from memory in address R3 into R1)
1001 010 001 111111   ; NOT R2,R1      (R2 is set to the inverse of R1)
0001 010 010 1 00001  ; ADD R2,R2,#1   (1 is added to R2 to complete 2's compliment operation)
0001 010 010 0 00 101 ; ADD R2,R2,R5   (R2 is set to the sum of R2 and R5)
0000 011 000000001    ; BRzp #1        (if R2 is zero or postive, skip the next line)
0001 101 001 1 00000  ; ADD R5,R1,#0   (set R5 to R1)
0001 100 100 1 11111  ; ADD R4,R4,#-1  (decrease R4 by 1)
0000 001 111110111    ; BRp #-9        (if R4 is postive, loop back 9 steps before the next line)
1111 0000 0010 0101   ; TRAP x25       (halt the program)
